[{"/home/qweffy/Desktop/Repos/Nasa/src/index.js":"1","/home/qweffy/Desktop/Repos/Nasa/src/App.js":"2","/home/qweffy/Desktop/Repos/Nasa/src/reportWebVitals.js":"3","/home/qweffy/Desktop/Repos/Nasa/src/components/Home.js":"4","/home/qweffy/Desktop/Repos/Nasa/src/components/NasaPhoto.js":"5","/home/qweffy/Desktop/Repos/Nasa/src/components/Mars.js":"6","/home/qweffy/Desktop/Repos/Nasa/src/components/NavBar.js":"7"},{"size":500,"mtime":1611960749905,"results":"8","hashOfConfig":"9"},{"size":515,"mtime":1611962748961,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1611960749905,"results":"11","hashOfConfig":"9"},{"size":250,"mtime":1611963462460,"results":"12","hashOfConfig":"9"},{"size":1209,"mtime":1611963190892,"results":"13","hashOfConfig":"9"},{"size":4118,"mtime":1611960749905,"results":"14","hashOfConfig":"9"},{"size":534,"mtime":1612016597732,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"66vk6u",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/qweffy/Desktop/Repos/Nasa/src/index.js",[],["34","35"],"/home/qweffy/Desktop/Repos/Nasa/src/App.js",[],"/home/qweffy/Desktop/Repos/Nasa/src/reportWebVitals.js",[],"/home/qweffy/Desktop/Repos/Nasa/src/components/Home.js",["36"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport HomeCss from \"./Home.module.css\";\nimport NavBar from \"./NavBar\";\n\nexport default function Home() {\n  return (\n    <div className={HomeCss}>\n      <NavBar />\n    </div>\n  );\n}\n","/home/qweffy/Desktop/Repos/Nasa/src/components/NasaPhoto.js",["37","38"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport NavBar from \"./NavBar\";\n\nconst apiKey = process.env.REACT_APP_NASA_KEY;\n\nexport default function NasaPhoto() {\n  const [photoData, setPhotoData] = useState(null);\n  useEffect(() => {\n    fetchPhoto();\n    async function fetchPhoto() {\n      const res = await fetch(\n        `https://api.nasa.gov/planetary/apod?api_key=${apiKey}`\n      );\n      const data = await res.json();\n      setPhotoData(data);\n    }\n  }, []);\n  if (!photoData) return <div />;\n  return (\n    <div>\n      {console.log(photoData)}\n      <NavBar />\n      <div className=\"nasaphoto\">\n        {photoData.media_type === \"image\" ? (\n          <img src={photoData.url} className=\"photo\" />\n        ) : (\n          <iframe\n            title=\"\"\n            src={photoData.url}\n            frameBorder=\"0\"\n            gesture=\"media\"\n            allow=\"encrypted-media\"\n            allowFullScreen\n            className=\"photo\"\n          />\n        )}\n\n        <div>\n          <h1>{photoData.title}</h1>\n          <p className=\"date\">{photoData.data}</p>\n          <p className=\"explanation\">{photoData.explanation}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/qweffy/Desktop/Repos/Nasa/src/components/Mars.js",["39"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport MARSCss from \"./Mars.module.css\";\nconst apiKey = process.env.REACT_APP_NASA_KEY;\n\nexport default function Mars() {\n  const [marsWeather, setMarsWeather] = useState(null);\n\n  useEffect(() => {\n    fetchPhoto();\n    async function fetchPhoto() {\n      const res = await fetch(\n        `https://api.nasa.gov/insight_weather/?api_key=${apiKey}&feedtype=json&ver=1.0`\n      );\n      const data = await res.json();\n      setMarsWeather(data);\n      console.log(marsWeather);\n    }\n  }, []);\n\n  return (\n    <div className={MARSCss.background}>\n      <main className={MARSCss.marscurrentweather}>\n        <h1 className={MARSCss.maintitle}>\n          Latest weather at Elysium Planitia\n        </h1>\n\n        <div className={MARSCss.date}>\n          <h2 className={`${MARSCss.sectiontitle} ${MARSCss.sectiontitledate}`}>\n            Sol\n            <span data-current-sol>375</span>\n          </h2>\n          <p className={MARSCss.dateday} data-current-date></p>\n        </div>\n\n        <div className={MARSCss.temp}>\n          <h2 className={MARSCss.sectiontitle}>Temperature</h2>\n          <p className={MARSCss.reading}>\n            High:\n            <span data-current-temp-high></span>°<span data-temp-unit></span>\n          </p>\n          <p className={MARSCss.reading}>\n            Low:\n            <span data-current-temp-low></span>°<span data-temp-unit></span>\n          </p>\n        </div>\n\n        <div className={MARSCss.wind}>\n          <h2 className={MARSCss.sectiontitle}>Wind</h2>\n          <p className={MARSCss.reading}>\n            <span data-wind-speed></span>\n            <span data-speed-unit></span>\n          </p>\n\n          <div className={MARSCss.wind__direction}>\n            <p className={MARSCss.sronly} data-wind-direction-text></p>\n\n            <div\n              className={MARSCss.wind__arrow}\n              data-wind-direction-arrow\n            ></div>\n          </div>\n        </div>\n\n        <div className={MARSCss.info}>\n          <p>\n            InSight is taking daily weather measurements (temperature, wind,\n            pressure) on the surface of Mars at Elysium Planitia, a flat, smooth\n            plain near Mars’ equator.\n          </p>\n          <p>\n            This is only a part of InSight’s mission.{\" \"}\n            <a href=\"https://mars.nasa.gov/insight/mission/overview/\">\n              Click here\n            </a>{\" \"}\n            to find out more.\n          </p>\n        </div>\n\n        <div className={MARSCss.unit}>\n          <label for=\"cel\">°C</label>\n          <input type=\"radio\" id=\"cel\" name=\"unit\" checked />\n          <button className={MARSCss.unit__toggle} data-unit-toggle></button>\n          <label for=\"fah\">°F</label>\n          <input type=\"radio\" id=\"fah\" name=\"unit\" />\n        </div>\n      </main>\n\n      <div className={MARSCss.previous_weather}>\n        <button for=\"weather-toggle\" className={MARSCss.show_previous_weather}>\n          <span>&#8593;</span>{\" \"}\n          <span className={MARSCss.sronly}>Show previous weather</span>\n        </button>\n\n        <h2\n          className={`${MARSCss.maintitle} ${MARSCss.previous_weather__title}`}\n        >\n          Previous 7 days\n        </h2>\n\n        <div className={MARSCss.previous_days} data-previous-sols></div>\n      </div>\n\n      <template data-previous-sol-template>\n        <div className={MARSCss.previous_days}>\n          <h3 className=\"previous-day__sol\">\n            Sol\n            <span data-sol></span>\n          </h3>\n          <p className={MARSCss.previous_day__date} data-date></p>\n          <p className=\"previous-day__temp\">\n            High:\n            <span data-temp-high></span>°<span data-temp-unit></span>\n          </p>\n          <p className=\"previous-day__temp\">\n            Low:\n            <span data-temp-low></span>°<span data-temp-unit></span>\n          </p>\n          <button\n            className={MARSCss.previous_day__more_info}\n            data-select-button\n          >\n            more info\n          </button>\n        </div>\n      </template>\n    </div>\n  );\n}\n","/home/qweffy/Desktop/Repos/Nasa/src/components/NavBar.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":2,"column":10,"nodeType":"46","messageId":"47","endLine":2,"endColumn":14},{"ruleId":"48","severity":1,"message":"49","line":26,"column":11,"nodeType":"50","endLine":26,"endColumn":56},{"ruleId":"51","severity":1,"message":"52","line":28,"column":11,"nodeType":"50","endLine":36,"endColumn":13},{"ruleId":"53","severity":1,"message":"54","line":19,"column":6,"nodeType":"55","endLine":19,"endColumn":8,"suggestions":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'marsWeather'. Either include it or remove the dependency array.","ArrayExpression",["59"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [marsWeather]",{"range":"62","text":"63"},[559,561],"[marsWeather]"]